#!/usr/bin/env node

const app = require('../app');
const debug = require('debug')('impress:server');
const http = require('http');
const schedule = require('node-schedule');
const portalupdate = require('../scripts/portal.js');

// 创建服务器并挂载到 3005 端口
const port = normalizePort(process.env.PORT || '3005');
app.set('port', port);

const server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);


// 设置定时任务
const scheduleTime = '*/1 * * * *';
schedule.scheduleJob(scheduleTime, function () {
  portalupdate();
});


function normalizePort(val) {
  const port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      process.exit(1);
      break;
    case 'EADDRINUSE':
      process.exit(1);
      break;
    default:
      throw error;
  }
}


function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
  console.log('Listening on port 3005.');
}
